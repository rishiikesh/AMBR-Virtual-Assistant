#import all for better working
from urllib.parse import uses_query
import pyttsx3
import speech_recognition as sr
import datetime
import wikipedia
import webbrowser
import os
import smtplib
import cv2

print("Initializing your assistant")
#user name
MASTER="Rishi"

engine=pyttsx3.init('sapi5')
voices=engine.getProperty('voices')
rate = engine.getProperty('rate')
#for changing pace of voice   
engine.setProperty('rate', 155)
#for voice 
engine.setProperty('voice',voices[1].id)


def speak(text):
    engine.say(text)
    engine.runAndWait()

#for greeting the user
def wishMe():
    hour = datetime.datetime.now().hour
    print(hour)

    if hour>=0 and hour<12:
        speak("Good Morning"+MASTER)

    elif hour>=12 and hour<18:
        speak("Good Afternoon"+MASTER)

    else:
        speak("Good Evening"+MASTER)


#for listening the user commands
def takeCommand():
    r=sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        audio=r.listen(source)

    try:
        print("Recognizing...")
        query=r.recognize_google(audio,language='en-in')
        print(f"user said:{query}\n")

    except Exception as e:
        print("Say that again")
        query=None
    return query


speak("Initializing AMBER....")
wishMe()
speak("I am your A.I...how may I help you?")
query=takeCommand()

#for executing user commands
if 'wikipedia' in query.lower():
    speak('Searching wikipedia...')
    query=query.replace("wikipedia", "")
    results=wikipedia.summary(query, sentences =2)
    speak(results)

elif 'open youtube' in query.lower():
    webbrowser.open("youtube.com")

elif 'open google' in query.lower():
    webbrowser.open("google.com")

elif 'open whatsapp' in query.lower():
    webbrowser.open("whatsapp.com")

elif 'open instagram' in query.lower():
    webbrowser.open("instagram.com")

elif 'play music' in query.lower():
    #user's music directory path
    songs_dir="C:\\Users\\rishi\\Music"
    songs=os.listdir(songs_dir)
    print(songs)
    os.startfile(os.path.join(songs_dir,songs[4]))

elif 'open chrome' in query.lower():
    webbrowser.open("chrome.com")

elif 'open camera' in query.lower():
    cap = cv2.VideoCapture(0)

#for checking the camera
if not cv2.VideoCapture(0).isOpened():
    raise IOError("Cannot open webcam")
while True:
    ret, frame = cap.read()
    frame = cv2.resize(frame, None, fx=0.5, fy=0.5, interpolation=cv2.INTER_AREA)
    cv2.imshow('Input', frame)

    c = cv2.waitKey(1)
    if c == 27:
        break

cap.release()
cv2.destroyAllWindows()